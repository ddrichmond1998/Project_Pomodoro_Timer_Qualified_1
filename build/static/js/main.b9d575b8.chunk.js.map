{"version":3,"sources":["utils/duration/index.js","pomodoro/Display.js","utils/useInterval/index.js","pomodoro/TimerDurations.js","pomodoro/ControlButtons.js","utils/class-names/index.js","pomodoro/Pomodoro.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","Display","TimerData","isTimerRunning","setTimerData","focusSecs","counter","focusTime","displayName","breakTime","breakSecs","paused","currentSession","onFocus","mins","secs","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","currentData","Audio","play","bar","style","display","className","data-testid","givenSeconds","seconds","round","secondsToDuration","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","TimerDurations","handleInOrDe","event","preventDefault","whichButton","target","nodeName","parentNode","name","newTime","max","min","type","disabled","onClick","ControlButtons","classNameToBoolean","playPause","stop","aria-label","title","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","Pomodoro","initialState","useState","setIsTimerRunning","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9d575b8.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\n export function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}","import React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\n\nexport default function Display({ TimerData, isTimerRunning, setTimerData }) {\n  let {\n    focusSecs,\n    counter,\n    focusTime,\n    displayName,\n    breakTime,\n    breakSecs,\n    onFocus,\n  } = TimerData;\n  let paused = !isTimerRunning ? \"block\" : \"none\";\n  let currentSession = onFocus\n    ? {\n        mins: focusTime,\n        secs: focusSecs,\n      }\n    : { mins: breakTime, secs: breakSecs };\n\n  useInterval(\n    () => {\n      setTimerData((currentData) => {\n        if (\n          currentData.displayName === \"Focusing\" &&\n          currentData.counter >= currentData.focusSecs\n        ) {\n          currentData.counter = 0;\n          currentData.displayName = \"On Break\";\n          currentData.onFocus = !currentData.onFocus;\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1373.mp3`).play();\n        } else if (\n          currentData.displayName === \"On Break\" &&\n          currentData.counter >= currentData.breakSecs\n        ) {\n          currentData.counter = 0;\n          currentData.displayName = \"Focusing\";\n          currentData.onFocus = !currentData.onFocus;\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1373.mp3`).play();\n        }\n\n        return { ...currentData, counter: currentData.counter + 1 };\n      });\n    },\n    isTimerRunning ? 1000 : null\n  );\n  let bar = `${(counter / currentSession.secs) * 100}`;\n  return (\n    <div style={{ display: `${TimerData.display}` }}>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\">\n            {displayName} for {minutesToDuration(currentSession.mins)} minutes\n          </h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(currentSession.secs - counter)} remaining\n          </p>\n        </div>\n      </div>\n      <div style={{ display: paused }}>\n        <h3>Paused</h3>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={bar} \n              style={{ width: `${bar}%` }} \n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  \n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n \n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction TimerDurations({ TimerData, isTimerRunning, setTimerData }) {\n  const handleInOrDe = (event) => {\n    event.preventDefault();\n    const whichButton =\n      event.target.nodeName === \"SPAN\"\n        ? event.target.parentNode.name\n        : event.target.name;\n    let newTime = 0;\n    switch (whichButton) {\n      case \"decrease-focus\":\n        newTime = Math.max(TimerData.focusTime - 5, 5);\n        setTimerData((currentData) => {\n          return {\n            ...currentData,\n            focusTime: newTime,\n            focusSecs: newTime * 60,\n          };\n        });\n        break;\n      case \"increase-focus\":\n        newTime = Math.min(TimerData.focusTime + 5, 60);\n        setTimerData((currentData) => {\n          return {\n            ...currentData,\n            focusTime: newTime,\n            focusSecs: newTime * 60,\n          };\n        });\n        break;\n      case \"decrease-break\":\n        newTime = Math.max(TimerData.breakTime - 1, 1);\n        setTimerData((currentData) => {\n          return {\n            ...currentData,\n            breakTime: newTime,\n            breakSecs: newTime * 60,\n          };\n        });\n        break;\n      case \"increase-break\":\n        newTime = Math.min(TimerData.breakTime + 1, 15);\n        setTimerData((currentData) => {\n          return {\n            ...currentData,\n            breakTime: newTime,\n            breakSecs: newTime * 60,\n          };\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <div className=\"input-group input-group-lg mb-2\">\n          <span className=\"input-group-text\" data-testid=\"duration-focus\">\n            Focus Duration: {minutesToDuration(TimerData.focusTime)}\n          </span>\n          <div className=\"input-group-append\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"decrease-focus\"\n              disabled={isTimerRunning}\n              onClick={handleInOrDe}\n              name=\"decrease-focus\"\n            >\n              <span className=\"oi oi-minus\" />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"increase-focus\"\n              disabled={isTimerRunning}\n              onClick={handleInOrDe}\n              name=\"increase-focus\"\n            >\n              <span className=\"oi oi-plus\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col\">\n        <div className=\"float-right\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-break\">\n              Break Duration: {minutesToDuration(TimerData.breakTime)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-break\"\n                disabled={isTimerRunning}\n                onClick={handleInOrDe}\n                name=\"decrease-break\"\n              >\n                <span className=\"oi oi-minus\" name=\"decrease-break\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-break\"\n                disabled={isTimerRunning}\n                onClick={handleInOrDe}\n                name=\"increase-break\"\n              >\n                <span className=\"oi oi-plus\" name=\"increase-break\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimerDurations;","import React from \"react\";\nimport classNames from \"../utils/class-names\";\n\nexport default function ControlButtons({ playPause, isTimerRunning, stop }) {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <div\n          className=\"btn-group btn-group-lg mb-2\"\n          role=\"group\"\n          aria-label=\"Timer controls\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-testid=\"play-pause\"\n            title=\"Start or pause timer\"\n            onClick={playPause}\n          >\n            <span\n              className={classNames({\n                oi: true,\n                \"oi-media-play\": !isTimerRunning,\n                \"oi-media-pause\": isTimerRunning,\n              })}\n            />\n          </button>\n          <button\n            type=\"reset\"\n            className=\"btn btn-secondary\"\n            title=\"Stop the session\"\n            disabled={!isTimerRunning}\n            onClick={stop}\n          >\n            <span className=\"oi oi-media-stop\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\n export default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}","import React, { useState } from \"react\";\n\nimport Display from \"./Display\";\nimport TimerDurations from \"./TimerDurations\";\nimport ControlButtons from \"./ControlButtons\";\n\nfunction Pomodoro() {\n  const initialState = {\n    focusTime: 25,\n    breakTime: 5,\n    display: `none`,\n    focusSecs: 1500,\n    breakSecs: 300,\n    counter: 0,\n    displayName: \"Focusing\",\n    onFocus: true,\n  };\n  \n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [TimerData, setTimerData] = useState({ ...initialState });\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setTimerData({ ...TimerData, display: \"block\" });\n  }\n  function stop() {\n    setTimerData({ ...initialState });\n    setIsTimerRunning(false);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <TimerDurations\n        TimerData={TimerData}\n        isTimerRunning={isTimerRunning}\n        setTimerData={setTimerData}\n      />\n      <ControlButtons\n        playPause={playPause}\n        isTimerRunning={isTimerRunning}\n        stop={stop}\n      />\n      <Display\n        TimerData={TimerData}\n        isTimerRunning={isTimerRunning}\n        setTimerData={setTimerData}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}